
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'F89F840D7983BE4FEE6B2FE3D5245F81'
    
_lr_action_items = {'L_CURLY':([2,],[4,]),'ARROW':([18,],[22,]),'$end':([0,1,3,15,20,],[-13,0,-2,-13,-1,]),'COMMA':([8,23,],[14,24,]),'SEMICOLON':([2,5,6,10,11,13,21,],[-13,-13,-4,15,-9,-3,-8,]),'R_CURLY':([4,7,8,9,14,19,],[-13,13,-5,-6,-13,-7,]),'NAME':([0,4,12,14,15,22,24,],[2,8,18,8,2,23,18,]),'R_PAREN':([12,16,17,23,24,25,],[-13,-11,21,-10,-13,-12,]),'L_PAREN':([2,5,6,13,],[-13,12,-4,-3,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'transitions':([5,],[10,]),'empty':([0,2,4,5,12,14,15,24,],[3,6,9,11,16,9,3,16,]),'expression':([0,15,],[1,20,]),'atomic_proposition':([4,14,],[7,19,]),'atomic_propositions':([2,],[5,]),'transition':([12,24,],[17,25,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> NAME atomic_propositions transitions SEMICOLON expression','expression',5,'p_expression','parser.py',14),
  ('expression -> empty','expression',1,'p_expression','parser.py',15),
  ('atomic_propositions -> L_CURLY atomic_proposition R_CURLY','atomic_propositions',3,'p_atomic_propositions','parser.py',30),
  ('atomic_propositions -> empty','atomic_propositions',1,'p_atomic_propositions','parser.py',31),
  ('atomic_proposition -> NAME','atomic_proposition',1,'p_atomic_proposition_single','parser.py',36),
  ('atomic_proposition -> empty','atomic_proposition',1,'p_atomic_proposition_single','parser.py',37),
  ('atomic_proposition -> NAME COMMA atomic_proposition','atomic_proposition',3,'p_atomic_proposition_mutliple','parser.py',42),
  ('transitions -> L_PAREN transition R_PAREN','transitions',3,'p_transitions','parser.py',47),
  ('transitions -> empty','transitions',1,'p_transitions','parser.py',48),
  ('transition -> NAME ARROW NAME','transition',3,'p_transition_single','parser.py',53),
  ('transition -> empty','transition',1,'p_transition_single','parser.py',54),
  ('transition -> NAME ARROW NAME COMMA transition','transition',5,'p_transition_multiple','parser.py',59),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',64),
]
